[tox]
minversion = 2.0
envlist = py34,py27,pep8
skipsdist = True

[testenv]
usedevelop = True
install_command =
                  constraints: {[testenv:common-constraints]install_command}
                  pip install -U {opts} {packages}
whitelist_externals = bash
                      find
                      rm
setenv =
   VIRTUAL_ENV={envdir}

deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt

commands =
  find . -type f -name "*.pyc" -delete
  bash tools/pretty_tox.sh '{posargs}'


[testenv:common-constraints]
install_command = pip install -c{env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt} {opts} {packages}

[testenv:pep8]
commands =
  doc8 -e .rst doc/source/ CONTRIBUTING.rst HACKING.rst README.rst
  bash tools/flake8wrap.sh {posargs}
  bandit -r zun -x tests -n5 -ll

[testenv:pep8-constraints]
install_command = {[testenv:common-constraints]install_command}
commands = flake8 {posargs}

[testenv:venv]
commands = {posargs}

[testenv:venv-constraints]
install_command = {[testenv:common-constraints]install_command}
commands = {posargs}

[testenv:cover]
commands = python setup.py test --coverage --testr-args='{posargs}'

[testenv:cover-constraints]
install_command = {[testenv:common-constraints]install_command}
commands = python setup.py test --coverage --testr-args='{posargs}'

[testenv:docs]
commands =
    doc8 -e .rst doc/source/ CONTRIBUTING.rst HACKING.rst README.rst
    python setup.py build_sphinx

[testenv:docs-constraints]
install_command = {[testenv:common-constraints]install_command}
commands = python setup.py build_sphinx

[testenv:debug]
commands = oslo_debug_helper {posargs}

[testenv:debug-constraints]
install_command = {[testenv:common-constraints]install_command}
commands = oslo_debug_helper {posargs}

[flake8]
show-source = True
builtins = _
exclude=.venv,.git,.tox,dist,doc,*lib/python*,*egg,build

[hacking]
local-check-factory = zun.hacking.checks.factory

[testenv:fast8]
# NOTE(sheel.rana): `tox -e fast8` cab be used to run pep8 command only for
# updated code instead for running whole code base.
# Use same environment directory as pep8 env to save space and install time.

envdir = {toxworkdir}/pep8
commands =
  {toxinidir}/tools/fast8.sh

[testenv:releasenotes]
# NOTE(sheel.rana): This target does not use constraints because
# upstream infra does not yet support it.
# Once that's fixed, we can drop the install_command.

install_command = pip install -U --force-reinstall {opts} {packages}
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[testenv:genconfig]
envdir = {toxworkdir}/venv
commands =
  {toxinidir}/tools/gen-config
